import React from "react";
import { View, StyleSheet } from "react-native";
//Number
import NumberFormat from "../../../components/UI/NumberFormat";
//PreOrderItem
import PreOrderItem from "./PreOrderItem";
//Text
import CustomText from "../../../components/UI/CustomText";
import Colors from "../../../utils/Colors";
//PropTypes check
import PropTypes from "prop-types";

export class SummaryOrder extends React.PureComponent {
  render() {
    const { newCartItems, total } = this.props;
    let newOrderList = []; //item.productId //item.quantity
    for (const key in newCartItems) {
      newOrderList.push({
        item: key,
        filename: newCartItems[key].productTitle,
        quantity: newCartItems[key].quantity,
        thumb: newCartItems[key].image,
        price: newCartItems[key].productPrice,
      });
    }

    console.log("summaryorderScreen.js", newOrderList);
    return (
      <View style={styles.container}>
        <CustomText style={{ ...styles.title, marginVertical: 5 }}>
          Order summary
        </CustomText>
        <View style={{ backgroundColor: "#fff", paddingHorizontal: 10 }}>
          {newOrderList.map((item) => {
            return (
              <View key={item.item}>
                <PreOrderItem item={item} />
              </View>
            );
          })}
        </View>

        <View style={styles.total}>
          <CustomText
            style={{
              fontSize: 15,
              color: Colors.text,
              fontWeight: "500",
            }}
          >
            Total
          </CustomText>
          <NumberFormat price={total.toString()} />
        </View>
      </View>
    );
  }
}

SummaryOrder.propTypes = {
  // cartItems: PropTypes.array.isRequired,
  total: PropTypes.number.isRequired,
};

const styles = StyleSheet.create({
  container: {
    marginTop: 20,
  },
  total: {
    flexDirection: "row",
    justifyContent: "space-between",
    marginBottom: 65,
    marginTop: 10,
    paddingHorizontal: 10,
  },
  title: {
    fontSize: 16,
    color: Colors.text,
    fontWeight: "500",
    marginVertical: 20,
    marginHorizontal: 10,
  },
});
